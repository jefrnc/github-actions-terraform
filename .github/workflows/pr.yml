name: 'Terraform'

on:
  push:
    branches:
      - main  
  pull_request:
    #paths:
    #- 'terraform/**'
    #- 'terraform-e2e-ci/**'
    #- '.github/workflows/terraform*'

concurrency: terraform-${{ github.ref }}

jobs:
  # main config
  main:
    name: 'main'
    runs-on: 'ubuntu-latest'

    steps:
    - name: 'checkout'
      uses: 'actions/checkout@v2'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-3

    - name: 'Setup Terraform'
      uses: 'hashicorp/setup-terraform@v1'
      with:
        terraform_version: '0.14.5'

    - name: 'Terraform Init'
      run: 'terraform init -input=false'

    - name: TF Lint
      uses: reviewdog/action-tflint@v1.17.0
      with:
        github_token: ${{ secrets.github_token }}
        fail_on_error: "true"
        filter_mode: "nofilter"
        level: "warning"

    - name: 'Terraform Validate'
      run: 'terraform validate -no-color'

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -input=false -out terraform.plan

    - name: Store plan
      uses: actions/upload-artifact@v2
      with:
        name: terraform-plan
        path: ./terraform.plan
        if-no-files-found: error

    - name: 'Terraform fmt'
      run: 'terraform fmt -diff -check'
      continue-on-error: true
    # - uses: champ-oss/terraform-pr-summary
    #   if: github.event_name == 'pull_request'
    #   with:
    #     token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve

    - name: Terraform Destroy
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform destroy -auto-approve